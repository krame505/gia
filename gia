#!/bin/bash

# OS-specific checks for presence of greadlink
case `uname` in
*Darwin*)
  READLINK=greadlink
  GREADLINKLOCATION=`which greadlink`
  if [ -z ${GREADLINKLOCATION} ]; then
    # install should have complained already, but maybe configuration changed
    echo "Missing greadlink. Please 'brew install coreutils'"
    exit 1
  fi
  ;;
*)
  READLINK=readlink
  ;;
esac

SRC=$("$READLINK" -f "${BASH_SOURCE}")
HOME_DIR=${SRC%/*}
JAR_NAME=$HOME_DIR/gia.jar

if [ ! -f "$JAR_NAME" ]; then
  echo "Couldn't find the gia jars to execute, aborting."
  echo "Looked for $JAR_NAME"
  exit 2
fi

STDLIB=$HOME_DIR/lib/stdlib.gia

LOAD_LIST="$STDLIB $@"
DECL_LIST=""

function run_gia {
    LOAD_SCRIPT=""
    for FILE in $LOAD_LIST
    do
        LOAD_SCRIPT+="use \"$FILE\"; "
    done

    java -jar $JAR_NAME "$LOAD_SCRIPT $DECL_LIST" "User input" $@
}

run_gia "\"Loaded\""

while read -e -p '(gia) ' LINE
do
    if [[ ! -z ${LINE// /} ]]
    then
        set $LINE
        case $1 in
            "exit")
                exit 0
                ;;
            "reload")
                run_gia "\"Done\""
                ;;
            "use")
                if [ ! -f $2 ]
                then
                    echo "File $2 not found"
                elif [[ $LOAD_LIST == *$2* ]]
                then
                    echo "File $2 already loaded"
                else
                    OLD_LOAD_LIST=$LOAD_LIST
                    LOAD_LIST+=" $2"
                    run_gia "\"Done\"" || LOAD_LIST=$OLD_LOAD_LIST
                fi
                ;;
            "shell")
                ${@:2}
                ;;
            *)
                case $@ in
                    type*\;|datatype*\;|*\})
                        OLD_DECL_LIST=$DECL_LIST
                        DECL_LIST+="$@"
                        run_gia "\"OK\"" || DECL_LIST=$OLD_DECL_LIST
                        ;;
                    *\;)
                        TXT="$@"
                        VAR1=${TXT%\=*}
                        VAR2=${VAR1%:*}
                        VAR=`xargs <<<$VAR2`
                        OLD_DECL_LIST=$DECL_LIST
                        DECL_LIST+="$@"
                        RESULT=$(run_gia "$VAR") && echo "$VAR = $RESULT" || (DECL_LIST=$OLD_DECL_LIST; echo -e "$RESULT")
                        ;;
                    *)
                        run_gia $@
                        ;;
                esac
                ;;
        esac
    fi
    history -s "$LINE"
done
